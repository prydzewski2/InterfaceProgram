/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "~@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "~@ionic/angular/css/normalize.css";
@import "~@ionic/angular/css/structure.css";
@import "~@ionic/angular/css/typography.css";
@import '~@ionic/angular/css/display.css';

/* Optional CSS utils that can be commented out */
@import "~@ionic/angular/css/padding.css";
@import "~@ionic/angular/css/float-elements.css";
@import "~@ionic/angular/css/text-alignment.css";
@import "~@ionic/angular/css/text-transformation.css";
@import "~@ionic/angular/css/flex-utils.css";

@import "src/scss/_mixins";

.text-bold {
  font-weight: bold;
}

.validation-errors {
  .error-message {
    color: var(--ion-color-danger);
  }
}

ion-card {
  --background: var(--ion-color-light);
  --color: var(--ion-color-primary);

  ion-card-title {
    font-size: 14px;
    font-weight: 700;
    --color: var(--ion-color-primary);
  }

  ion-item-divider {
    --ion-background-color: transparent;
    min-height: 0 !important;
  }
  .no-icon{
    .ionic-selectable-icon{
      display: none;
    }
  }

  &.form-card {
    $contentMaxWidth: 400px;
    &.extended-width {
      $contentMaxWidth: 750px;
    }
    .wrapper {
      max-width: $contentMaxWidth;
      margin: 0 auto;
      padding: 24px 0;
    }

    ion-buttons {
      max-width: $contentMaxWidth;
      margin: 0 auto;
      padding: 24px 0 16px;
      grid-gap: 16px;

      ion-button {
        flex: 1;
      }
    }
  }
}

.card-list {
  margin: 24px 10px;

  header {
    &.sortable {
      cursor: pointer;
      .col {
        &:hover {
          font-weight: bolder;
        }
        ion-icon {
          margin-left: 7px;
        }
      }
    }

    display: none;
    background: rgba(var(--ion-color-primary-rgb), 0.1);
    font-size: 15px;
    font-weight: 700;
    border-radius: 6px;

    @include for-size(lg) {
      display: block;
    }

    .content {
      height: 48px;
    }
  }

  ion-card {
    margin: 8px 0 !important;
  }

  .content {
    display: flex;
    padding: 16px;
    flex-direction: column;

    @include for-size(lg) {
      flex-direction: row;
      align-items: center;
      padding: 0 24px;
      height: 80px;
    }

    .actions {
      display: flex;
      justify-content: flex-end;
      align-items: center !important;

      @include for-size(lg) {
        flex: 1;
      }

      ion-button {
        margin-left: 16px;
      }

      .item-status-icon {
        font-size: xx-large;
        margin-left: 7px;
        .for-release {
          color: var(--ion-color-primary);
        }
        .delivered {
          color: var(--ion-color-primary);
        }
        .received {
          color: var(--ion-color-secondary);
        }
        .rejected {
          color: var(--ion-color-danger);
        }
        .returned {
          color: var(--ion-color-warning);
        }
      }
    }

    .col {
      display: flex;
      align-items: flex-start;
      margin-bottom: 8px;
      line-height: 24px;

      &:last-of-type {
        margin-bottom: 0;
      }

      @include for-size(lg) {
        margin-bottom: 0;
        padding: 0 4px;
      }
    }

    .col > ion-icon {
      width: 24px;
      height: 24px;
      margin-right: 8px;
    }
  }
}

ion-button.with-animation {

  $transitionDuration: 300ms;
  $moveDistance: 12px;

  span.text {
    transition: transform ease-in-out $transitionDuration;

    @include for-size(lg) {
      transform: translateX($moveDistance);
    }
  }

  ion-icon {
    opacity: 0;
    transition: opacity ease-in-out $transitionDuration;
    display: none;

    @include for-size(lg) {
      display: inline-block;
    }
  }

  &:hover {
    --background: var(--ion-color-secondary);

    ion-icon {
      opacity: 1;
    }

    span.text {
      @include for-size(lg) {
        transform: translateX(0);
      }
    }
  }
}
